/**
 * @author: linhu@kanzhun.com
 * @date: 2020/4/9 11:18
 * @description:装饰器模式
 * 意图： 动态地给一个对象添加一些额外的职责。就增加功能来说，装饰器模式相比生成子类更为灵活。
 * 主要解决：一般的，我们为了扩展一个类经常使用继承方式实现，由于继承为类引入静态特征，并且随着扩展功能的增多，子类会很膨胀。
 * 何时使用：在不想增加很多子类的情况下扩展类。
 * 如何解决：将具体功能职责划分，同时继承装饰者模式
 * 使用场景：扩展一个类的功能。
            动态增加功能，动态撤销。
   例子：学习就是一种装饰器模式（假设学到的知识不会忘记），我们不断的学习就是不断的给被装饰类加上新的装饰器。
 */
package com.linhao007.www.pattern.DecoratorPattern;